openapi: 3.0.3
info:
  title: Iron Plans API
  version: 1.0.0
paths:
  /accounts/v1/me/:
    get:
      operationId: accounts_v1_me_retrieve
      description: |-
        Shortcut to `/accounts/v1/{{my customer id}}`.

        Automatically creates a new customer account if one does not
        exist for the authenticated user.
      tags:
        - accounts
      security:
        - oauth2-deprecated: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: ''
  /customers/v1/:
    get:
      operationId: customers_v1_list
      description: Management API for [Customers](https://docs.ironplans.com/concepts/teams/customers).
      parameters:
        - name: limit
          required: false
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
        - name: offset
          required: false
          in: query
          description: The initial index from which to return the results.
          schema:
            type: integer
        - in: query
          name: source_id
          schema:
            type: string
      tags:
        - customers
      security:
        - private-provider-token: []
        - jwt-token: []
        - jwt-token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCustomerList'
          description: ''
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: ''
        5XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: ''
    post:
      operationId: customers_v1_create
      description: Management API for [Customers](https://docs.ironplans.com/concepts/teams/customers).
      tags:
        - customers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCustomerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateCustomerRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateCustomerRequest'
        required: true
      security:
        - private-provider-token: []
        - jwt-token: []
        - jwt-token: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCustomer'
          description: ''
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: ''
        5XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: ''
  /customers/v1/{id}/:
    get:
      operationId: customers_v1_retrieve
      description: Management API for [Customers](https://docs.ironplans.com/concepts/teams/customers).
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this customer.
          required: true
      tags:
        - customers
      security:
        - private-provider-token: []
        - jwt-token: []
        - jwt-token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: ''
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: ''
        5XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: ''
    put:
      operationId: customers_v1_update
      description: Management API for [Customers](https://docs.ironplans.com/concepts/teams/customers).
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this customer.
          required: true
      tags:
        - customers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomerRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomerRequest'
      security:
        - private-provider-token: []
        - jwt-token: []
        - jwt-token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: ''
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: ''
        5XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: ''
    patch:
      operationId: customers_v1_partial_update
      description: Management API for [Customers](https://docs.ironplans.com/concepts/teams/customers).
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this customer.
          required: true
      tags:
        - customers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCustomerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCustomerRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCustomerRequest'
      security:
        - private-provider-token: []
        - jwt-token: []
        - jwt-token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: ''
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: ''
        5XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: ''
    delete:
      operationId: customers_v1_destroy
      description: Management API for [Customers](https://docs.ironplans.com/concepts/teams/customers).
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this customer.
          required: true
      tags:
        - customers
      security:
        - private-provider-token: []
        - jwt-token: []
        - jwt-token: []
      responses:
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: ''
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: ''
        5XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: ''
  /customers/v1/confirm_card/:
    post:
      operationId: customers_v1_confirm_card_create
      description: Confirm card as a preferred payment method.
      tags:
        - customers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerConfirmCardRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomerConfirmCardRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomerConfirmCardRequest'
        required: true
      security:
        - private-provider-token: []
        - jwt-token: []
        - jwt-token: []
      responses:
        '200':
          description: No response body
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: ''
        5XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: ''
  /customers/v1/oidc-exchange/:
    post:
      operationId: customers_v1_oidc_exchange_create
      description: Management API for [Customers](https://docs.ironplans.com/concepts/teams/customers).
      tags:
        - customers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IDTokenExchangeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/IDTokenExchangeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/IDTokenExchangeRequest'
        required: true
      security:
        - private-provider-token: []
        - jwt-token: []
        - jwt-token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerTokenResponse'
          description: ''
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: ''
        5XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: ''
  /customers/v1/payment_intent/:
    post:
      operationId: customers_v1_payment_intent_create
      description: |-
        Create a payment intent for a new plan. Validates server-side the right
        amount to charge client-side.  Returns payment intent client secret to
        give client ability to collect new card details and charge it.

        There are two cases where we would create payment intent for a new plan
        up front client-side:

        1. Brand new Customer/Team during sign-up flow, no previous subscription
        or plan

        1. Team switching from unmetered free plan to paid plan, with no payment
        method saved
      tags:
        - customers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerIntentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomerIntentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomerIntentRequest'
        required: true
      security:
        - private-provider-token: []
        - jwt-token: []
        - jwt-token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientSecret'
          description: ''
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: ''
        5XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: ''
  /customers/v1/renew_token/:
    post:
      operationId: customers_v1_renew_token_create
      description: Management API for [Customers](https://docs.ironplans.com/concepts/teams/customers).
      tags:
        - customers
      security:
        - private-provider-token: []
        - jwt-token: []
        - jwt-token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerTokenResponse'
          description: ''
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: ''
        5XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: ''
  /customers/v1/setup_intent/:
    post:
      operationId: customers_v1_setup_intent_create
      description: |-
        Sets up future payments and passes back client secret to be used in
        card form. Similar to payment_intent endpoint except no charge is made.
      tags:
        - customers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerIntentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomerIntentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomerIntentRequest'
        required: true
      security:
        - private-provider-token: []
        - jwt-token: []
        - jwt-token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientSecret'
          description: ''
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: ''
        5XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: ''
  /customers/v1/token/:
    post:
      operationId: customers_v1_token_create
      description: Management API for [Customers](https://docs.ironplans.com/concepts/teams/customers).
      tags:
        - customers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueCustomerTokenRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/IssueCustomerTokenRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/IssueCustomerTokenRequest'
      security:
        - private-provider-token: []
        - jwt-token: []
        - jwt-token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerTokenResponse'
          description: ''
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: ''
        5XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: ''
  /features/v1/:
    get:
      operationId: features_v1_list
      parameters:
        - name: limit
          required: false
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
        - name: offset
          required: false
          in: query
          description: The initial index from which to return the results.
          schema:
            type: integer
        - in: query
          name: slug
          schema:
            type: string
      tags:
        - features
      security:
        - oauth2-deprecated: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFeatureList'
          description: ''
    post:
      operationId: features_v1_create
      tags:
        - features
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeatureRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FeatureRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FeatureRequest'
      security:
        - oauth2-deprecated: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feature'
          description: ''
  /features/v1/{id}/:
    get:
      operationId: features_v1_retrieve
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this feature.
          required: true
      tags:
        - features
      security:
        - oauth2-deprecated: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feature'
          description: ''
    put:
      operationId: features_v1_update
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this feature.
          required: true
      tags:
        - features
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeatureRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FeatureRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FeatureRequest'
      security:
        - oauth2-deprecated: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feature'
          description: ''
    patch:
      operationId: features_v1_partial_update
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this feature.
          required: true
      tags:
        - features
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFeatureRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFeatureRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFeatureRequest'
      security:
        - oauth2-deprecated: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feature'
          description: ''
    delete:
      operationId: features_v1_destroy
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this feature.
          required: true
      tags:
        - features
      security:
        - oauth2-deprecated: []
      responses:
        '204':
          description: No response body
  /featurespecs/v1/:
    get:
      operationId: featurespecs_v1_list
      parameters:
        - name: limit
          required: false
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
        - name: offset
          required: false
          in: query
          description: The initial index from which to return the results.
          schema:
            type: integer
      tags:
        - featurespecs
      security:
        - oauth2-deprecated: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFeatureSpecList'
          description: ''
    post:
      operationId: featurespecs_v1_create
      tags:
        - featurespecs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeatureSpecRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FeatureSpecRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FeatureSpecRequest'
        required: true
      security:
        - oauth2-deprecated: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureSpec'
          description: ''
  /featurespecs/v1/{id}/:
    get:
      operationId: featurespecs_v1_retrieve
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this feature spec.
          required: true
      tags:
        - featurespecs
      security:
        - oauth2-deprecated: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureSpec'
          description: ''
    put:
      operationId: featurespecs_v1_update
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this feature spec.
          required: true
      tags:
        - featurespecs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeatureSpecRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FeatureSpecRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FeatureSpecRequest'
        required: true
      security:
        - oauth2-deprecated: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureSpec'
          description: ''
    patch:
      operationId: featurespecs_v1_partial_update
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this feature spec.
          required: true
      tags:
        - featurespecs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFeatureSpecRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFeatureSpecRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFeatureSpecRequest'
      security:
        - oauth2-deprecated: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureSpec'
          description: ''
    delete:
      operationId: featurespecs_v1_destroy
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this feature spec.
          required: true
      tags:
        - featurespecs
      security:
        - oauth2-deprecated: []
      responses:
        '204':
          description: No response body
  /invites/v1/:
    get:
      operationId: invites_v1_list
      parameters:
        - name: limit
          required: false
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
        - name: offset
          required: false
          in: query
          description: The initial index from which to return the results.
          schema:
            type: integer
      tags:
        - invites
      security:
        - oauth2-deprecated: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedInviteList'
          description: ''
    post:
      operationId: invites_v1_create
      description: Send an invitation via email.
      tags:
        - invites
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InviteRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InviteRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InviteRequest'
        required: true
      security:
        - oauth2-deprecated: []
      responses:
        '201':
          description: No response body
  /invites/v1/{id}/:
    get:
      operationId: invites_v1_retrieve
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this invite.
          required: true
      tags:
        - invites
      security:
        - oauth2-deprecated: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invite'
          description: ''
    put:
      operationId: invites_v1_update
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this invite.
          required: true
      tags:
        - invites
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InviteRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InviteRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InviteRequest'
        required: true
      security:
        - oauth2-deprecated: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invite'
          description: ''
    patch:
      operationId: invites_v1_partial_update
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this invite.
          required: true
      tags:
        - invites
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedInviteRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedInviteRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedInviteRequest'
      security:
        - oauth2-deprecated: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invite'
          description: ''
    delete:
      operationId: invites_v1_destroy
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this invite.
          required: true
      tags:
        - invites
      security:
        - oauth2-deprecated: []
      responses:
        '204':
          description: No response body
  /invites/v1/bulk/:
    post:
      operationId: invites_v1_bulk_create
      description: Send multiple invitations via email.
      tags:
        - invites
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkCreateInviteRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BulkCreateInviteRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BulkCreateInviteRequest'
        required: true
      security:
        - oauth2-deprecated: []
      responses:
        '201':
          description: No response body
  /invites/v1/claim/:
    get:
      operationId: invites_v1_claim_retrieve
      description: Claim an invite and be redirected to provider's auth url.
      parameters:
        - in: query
          name: token
          schema:
            type: string
          required: true
      tags:
        - invites
      security:
        - oauth2-deprecated: []
      responses:
        '302':
          description: No response body
  /openapi.json:
    get:
      operationId: openapi.json_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
        - in: query
          name: lang
          schema:
            type: string
            enum:
              - af
              - ar
              - ar-dz
              - ast
              - az
              - be
              - bg
              - bn
              - br
              - bs
              - ca
              - cs
              - cy
              - da
              - de
              - dsb
              - el
              - en
              - en-au
              - en-gb
              - eo
              - es
              - es-ar
              - es-co
              - es-mx
              - es-ni
              - es-ve
              - et
              - eu
              - fa
              - fi
              - fr
              - fy
              - ga
              - gd
              - gl
              - he
              - hi
              - hr
              - hsb
              - hu
              - hy
              - ia
              - id
              - ig
              - io
              - is
              - it
              - ja
              - ka
              - kab
              - kk
              - km
              - kn
              - ko
              - ky
              - lb
              - lt
              - lv
              - mk
              - ml
              - mn
              - mr
              - my
              - nb
              - ne
              - nl
              - nn
              - os
              - pa
              - pl
              - pt
              - pt-br
              - ro
              - ru
              - sk
              - sl
              - sq
              - sr
              - sr-latn
              - sv
              - sw
              - ta
              - te
              - tg
              - th
              - tk
              - tr
              - tt
              - udm
              - uk
              - ur
              - uz
              - vi
              - zh-hans
              - zh-hant
      tags:
        - openapi.json
      security:
        - oauth2-deprecated: []
        - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /openapi.yaml:
    get:
      operationId: openapi.yaml_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
        - in: query
          name: lang
          schema:
            type: string
            enum:
              - af
              - ar
              - ar-dz
              - ast
              - az
              - be
              - bg
              - bn
              - br
              - bs
              - ca
              - cs
              - cy
              - da
              - de
              - dsb
              - el
              - en
              - en-au
              - en-gb
              - eo
              - es
              - es-ar
              - es-co
              - es-mx
              - es-ni
              - es-ve
              - et
              - eu
              - fa
              - fi
              - fr
              - fy
              - ga
              - gd
              - gl
              - he
              - hi
              - hr
              - hsb
              - hu
              - hy
              - ia
              - id
              - ig
              - io
              - is
              - it
              - ja
              - ka
              - kab
              - kk
              - km
              - kn
              - ko
              - ky
              - lb
              - lt
              - lv
              - mk
              - ml
              - mn
              - mr
              - my
              - nb
              - ne
              - nl
              - nn
              - os
              - pa
              - pl
              - pt
              - pt-br
              - ro
              - ru
              - sk
              - sl
              - sq
              - sr
              - sr-latn
              - sv
              - sw
              - ta
              - te
              - tg
              - th
              - tk
              - tr
              - tt
              - udm
              - uk
              - ur
              - uz
              - vi
              - zh-hans
              - zh-hant
      tags:
        - openapi.yaml
      security:
        - oauth2-deprecated: []
        - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /plans/v1/:
    get:
      operationId: plans_v1_list
      parameters:
        - in: query
          name: is_active
          schema:
            type: boolean
        - in: query
          name: is_public
          schema:
            type: boolean
        - in: query
          name: is_trial_allowed
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
        - name: offset
          required: false
          in: query
          description: The initial index from which to return the results.
          schema:
            type: integer
      tags:
        - plans
      security:
        - oauth2-deprecated: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPlanList'
          description: ''
    post:
      operationId: plans_v1_create
      description: |-
        Add a feature and optionally specification to a plan by specifying a
        `feature_id` and `spec_id` in the list of features.
      tags:
        - plans
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlanRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PlanRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PlanRequest'
        required: true
      security:
        - oauth2-deprecated: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plan'
          description: ''
  /plans/v1/{id}/:
    get:
      operationId: plans_v1_retrieve
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this plan.
          required: true
      tags:
        - plans
      security:
        - oauth2-deprecated: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plan'
          description: ''
    put:
      operationId: plans_v1_update
      description: |-
        Remove a feature and spec from a plan by specifying `id` and
        `is_active: false` in the plan feature list in an update operation.  An
        empty list for PUT or PATCH does nothing.  A PlanFeature cannot change
        which feature or spec once created. A deactivated PlanFeature can be
        reactivated by setting `is_active: true`
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this plan.
          required: true
      tags:
        - plans
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlanRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PlanRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PlanRequest'
        required: true
      security:
        - oauth2-deprecated: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plan'
          description: ''
    patch:
      operationId: plans_v1_partial_update
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this plan.
          required: true
      tags:
        - plans
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPlanRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPlanRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPlanRequest'
      security:
        - oauth2-deprecated: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plan'
          description: ''
    delete:
      operationId: plans_v1_destroy
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this plan.
          required: true
      tags:
        - plans
      security:
        - oauth2-deprecated: []
      responses:
        '204':
          description: No response body
  /plans/v1/contact_us/:
    post:
      operationId: plans_v1_contact_us_create
      description: Handle contact us form data for Enterprise style plans.
      tags:
        - plans
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlanContactFormRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PlanContactFormRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PlanContactFormRequest'
      security:
        - oauth2-deprecated: []
      responses:
        '200':
          description: No response body
  /providers/v1/:
    get:
      operationId: providers_v1_list
      parameters:
        - name: limit
          required: false
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
        - name: offset
          required: false
          in: query
          description: The initial index from which to return the results.
          schema:
            type: integer
        - in: query
          name: slug
          schema:
            type: string
      tags:
        - providers
      security:
        - oauth2-deprecated: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProviderList'
          description: ''
    post:
      operationId: providers_v1_create
      tags:
        - providers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProviderRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProviderRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProviderRequest'
        required: true
      security:
        - oauth2-deprecated: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Provider'
          description: ''
  /providers/v1/{id}/:
    get:
      operationId: providers_v1_retrieve
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this provider.
          required: true
      tags:
        - providers
      security:
        - oauth2-deprecated: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Provider'
          description: ''
    put:
      operationId: providers_v1_update
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this provider.
          required: true
      tags:
        - providers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProviderRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProviderRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProviderRequest'
        required: true
      security:
        - oauth2-deprecated: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Provider'
          description: ''
    patch:
      operationId: providers_v1_partial_update
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this provider.
          required: true
      tags:
        - providers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProviderRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProviderRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProviderRequest'
      security:
        - oauth2-deprecated: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Provider'
          description: ''
    delete:
      operationId: providers_v1_destroy
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this provider.
          required: true
      tags:
        - providers
      security:
        - oauth2-deprecated: []
      responses:
        '204':
          description: No response body
  /providers/v1/{id}/stripe/:
    get:
      operationId: providers_v1_stripe_retrieve
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this provider.
          required: true
      tags:
        - providers
      security:
        - oauth2-deprecated: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Provider'
          description: ''
    post:
      operationId: providers_v1_stripe_create
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this provider.
          required: true
      tags:
        - providers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProviderRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProviderRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProviderRequest'
        required: true
      security:
        - oauth2-deprecated: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Provider'
          description: ''
  /providers/v1/slug/:
    get:
      operationId: providers_v1_slug_retrieve
      parameters:
        - in: query
          name: slug
          schema:
            type: string
      tags:
        - providers
      security:
        - oauth2-deprecated: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Slug'
          description: ''
  /subscriptions/v1/:
    get:
      operationId: subscriptions_v1_list
      parameters:
        - name: limit
          required: false
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
        - name: offset
          required: false
          in: query
          description: The initial index from which to return the results.
          schema:
            type: integer
        - in: query
          name: plan_id
          schema:
            type: string
            format: uuid
      tags:
        - subscriptions
      security:
        - oauth2-deprecated: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSubscriptionList'
          description: ''
    post:
      operationId: subscriptions_v1_create
      tags:
        - subscriptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SubscriptionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SubscriptionRequest'
        required: true
      security:
        - oauth2-deprecated: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: ''
  /subscriptions/v1/{id}/:
    get:
      operationId: subscriptions_v1_retrieve
      description: Detailed subscription data.
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this subscription.
          required: true
      tags:
        - subscriptions
      security:
        - oauth2-deprecated: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionDetail'
          description: ''
    put:
      operationId: subscriptions_v1_update
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this subscription.
          required: true
      tags:
        - subscriptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SubscriptionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SubscriptionRequest'
        required: true
      security:
        - oauth2-deprecated: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionDetail'
          description: ''
    patch:
      operationId: subscriptions_v1_partial_update
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this subscription.
          required: true
      tags:
        - subscriptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSubscriptionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSubscriptionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSubscriptionRequest'
      security:
        - oauth2-deprecated: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionDetail'
          description: ''
    delete:
      operationId: subscriptions_v1_destroy
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this subscription.
          required: true
      tags:
        - subscriptions
      security:
        - oauth2-deprecated: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionDetail'
          description: ''
  /subscriptions/v1/{id}/renew/:
    patch:
      operationId: subscriptions_v1_renew_partial_update
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this subscription.
          required: true
      tags:
        - subscriptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSubscriptionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSubscriptionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSubscriptionRequest'
      security:
        - oauth2-deprecated: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionDetail'
          description: ''
  /subscriptions/v1/{id}/report/:
    post:
      operationId: subscriptions_v1_report_create
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this subscription.
          required: true
      tags:
        - subscriptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportUsageRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReportUsageRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReportUsageRequest'
        required: true
      security:
        - oauth2-deprecated: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usage'
          description: ''
  /subscriptions/v1/{id}/switch/:
    patch:
      operationId: subscriptions_v1_switch_partial_update
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this subscription.
          required: true
      tags:
        - subscriptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPlanSwitchRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPlanSwitchRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPlanSwitchRequest'
      security:
        - oauth2-deprecated: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionDetail'
          description: ''
  /subscriptions/v1/{id}/usage/:
    get:
      operationId: subscriptions_v1_usage_list
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this subscription.
          required: true
        - in: query
          name: plan_id
          schema:
            type: string
            format: uuid
      tags:
        - subscriptions
      security:
        - oauth2-deprecated: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Usage'
          description: ''
  /subscriptions/v1/{id}/usage_exceeded/:
    get:
      operationId: subscriptions_v1_usage_exceeded_retrieve
      description: Convenience endpoint so providers don't need to loop through usages.
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this subscription.
          required: true
      tags:
        - subscriptions
      security:
        - oauth2-deprecated: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsageExceeded'
          description: ''
  /team_memberships/v1/:
    get:
      operationId: team_memberships_v1_list
      description: |-
        As a Customer, access memberships for all your teams.
        As a Provider, full admin access to teams.
      parameters:
        - in: query
          name: customer_id
          schema:
            type: string
            format: uuid
        - name: limit
          required: false
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
        - name: offset
          required: false
          in: query
          description: The initial index from which to return the results.
          schema:
            type: integer
      tags:
        - team_memberships
      security:
        - oauth2-deprecated: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMembershipList'
          description: ''
    post:
      operationId: team_memberships_v1_create
      description: |-
        As a Customer, access memberships for all your teams.
        As a Provider, full admin access to teams.
      tags:
        - team_memberships
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMembershipRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateMembershipRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateMembershipRequest'
        required: true
      security:
        - oauth2-deprecated: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Membership'
          description: ''
  /team_memberships/v1/{id}/:
    get:
      operationId: team_memberships_v1_retrieve
      description: |-
        As a Customer, access memberships for all your teams.
        As a Provider, full admin access to teams.
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this team membership.
          required: true
      tags:
        - team_memberships
      security:
        - oauth2-deprecated: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Membership'
          description: ''
    put:
      operationId: team_memberships_v1_update
      description: |-
        As a Customer, access memberships for all your teams.
        As a Provider, full admin access to teams.
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this team membership.
          required: true
      tags:
        - team_memberships
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MembershipRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MembershipRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MembershipRequest'
        required: true
      security:
        - oauth2-deprecated: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Membership'
          description: ''
    patch:
      operationId: team_memberships_v1_partial_update
      description: |-
        As a Customer, access memberships for all your teams.
        As a Provider, full admin access to teams.
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this team membership.
          required: true
      tags:
        - team_memberships
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMembershipRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMembershipRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMembershipRequest'
      security:
        - oauth2-deprecated: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Membership'
          description: ''
    delete:
      operationId: team_memberships_v1_destroy
      description: |-
        As a Customer, access memberships for all your teams.
        As a Provider, full admin access to teams.
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this team membership.
          required: true
      tags:
        - team_memberships
      security:
        - oauth2-deprecated: []
      responses:
        '204':
          description: No response body
  /teams/v1/:
    get:
      operationId: teams_v1_list
      parameters:
        - name: limit
          required: false
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
        - name: offset
          required: false
          in: query
          description: The initial index from which to return the results.
          schema:
            type: integer
      tags:
        - teams
      security:
        - oauth2-deprecated: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTeamList'
          description: ''
    post:
      operationId: teams_v1_create
      tags:
        - teams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamDetailRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TeamDetailRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TeamDetailRequest'
        required: true
      security:
        - oauth2-deprecated: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamDetail'
          description: ''
  /teams/v1/{id}/:
    get:
      operationId: teams_v1_retrieve
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this team.
          required: true
      tags:
        - teams
      security:
        - oauth2-deprecated: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamDetail'
          description: ''
    put:
      operationId: teams_v1_update
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this team.
          required: true
      tags:
        - teams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamDetailRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TeamDetailRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TeamDetailRequest'
        required: true
      security:
        - oauth2-deprecated: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamDetail'
          description: ''
    patch:
      operationId: teams_v1_partial_update
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this team.
          required: true
      tags:
        - teams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTeamDetailRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTeamDetailRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTeamDetailRequest'
      security:
        - oauth2-deprecated: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamDetail'
          description: ''
    delete:
      operationId: teams_v1_destroy
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this team.
          required: true
      tags:
        - teams
      security:
        - oauth2-deprecated: []
      responses:
        '204':
          description: No response body
  /teams/v1/{id}/invoices/:
    get:
      operationId: teams_v1_invoices_list
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this team.
          required: true
        - name: limit
          required: false
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
        - name: offset
          required: false
          in: query
          description: The initial index from which to return the results.
          schema:
            type: integer
      tags:
        - teams
      security:
        - oauth2-deprecated: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedInvoiceList'
          description: ''
  /teams/v1/{id}/metadata/:
    get:
      operationId: teams_v1_metadata_retrieve
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this team.
          required: true
      tags:
        - teams
      security:
        - oauth2-deprecated: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                description:
                  String to string mapping.  Keys may be up to 128 bytes
                  and values may be up to 512 bytes.
                additionalProperties:
                  type: string
          description: ''
        '201':
          content:
            application/json:
              schema:
                type: object
                description:
                  String to string mapping.  Keys may be up to 128 bytes
                  and values may be up to 512 bytes.
                additionalProperties:
                  type: string
          description: ''
    post:
      operationId: teams_v1_metadata_create
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this team.
          required: true
      tags:
        - teams
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description:
                String to string mapping.  Keys may be up to 128 bytes
                and values may be up to 512 bytes.
              additionalProperties:
                type: string
      security:
        - oauth2-deprecated: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                description:
                  String to string mapping.  Keys may be up to 128 bytes
                  and values may be up to 512 bytes.
                additionalProperties:
                  type: string
          description: ''
        '201':
          content:
            application/json:
              schema:
                type: object
                description:
                  String to string mapping.  Keys may be up to 128 bytes
                  and values may be up to 512 bytes.
                additionalProperties:
                  type: string
          description: ''
    patch:
      operationId: teams_v1_metadata_partial_update
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this team.
          required: true
      tags:
        - teams
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description:
                String to string mapping.  Keys may be up to 128 bytes
                and values may be up to 512 bytes.
              additionalProperties:
                type: string
      security:
        - oauth2-deprecated: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                description:
                  String to string mapping.  Keys may be up to 128 bytes
                  and values may be up to 512 bytes.
                additionalProperties:
                  type: string
          description: ''
        '201':
          content:
            application/json:
              schema:
                type: object
                description:
                  String to string mapping.  Keys may be up to 128 bytes
                  and values may be up to 512 bytes.
                additionalProperties:
                  type: string
          description: ''
  /tokens/v1/:
    get:
      operationId: tokens_v1_list
      description: Management of Provider Tokens.
      parameters:
        - in: query
          name: is_active
          schema:
            type: boolean
        - in: query
          name: is_public
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
        - name: offset
          required: false
          in: query
          description: The initial index from which to return the results.
          schema:
            type: integer
      tags:
        - tokens
      security:
        - oauth2-deprecated: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTokenList'
          description: ''
    post:
      operationId: tokens_v1_create
      description: Management of Provider Tokens.
      tags:
        - tokens
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRequest'
      security:
        - oauth2-deprecated: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: ''
  /tokens/v1/{id}/:
    get:
      operationId: tokens_v1_retrieve
      description: Management of Provider Tokens.
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this provider token.
          required: true
      tags:
        - tokens
      security:
        - oauth2-deprecated: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: ''
    put:
      operationId: tokens_v1_update
      description: Management of Provider Tokens.
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this provider token.
          required: true
      tags:
        - tokens
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRequest'
      security:
        - oauth2-deprecated: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: ''
    patch:
      operationId: tokens_v1_partial_update
      description: Management of Provider Tokens.
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this provider token.
          required: true
      tags:
        - tokens
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTokenRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTokenRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTokenRequest'
      security:
        - oauth2-deprecated: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: ''
    delete:
      operationId: tokens_v1_destroy
      description: Management of Provider Tokens.
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this provider token.
          required: true
      tags:
        - tokens
      security:
        - oauth2-deprecated: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    Account:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        teams:
          type: array
          items:
            $ref: '#/components/schemas/Team'
          readOnly: true
          default: []
        email:
          type: string
          format: email
          readOnly: true
        is_verified:
          type: boolean
          readOnly: true
      required:
        - email
        - id
        - is_verified
        - teams
    AggregationEnum:
      enum:
        - sum
        - last
      type: string
    BillingPeriodEnum:
      enum:
        - hourly
        - daily
        - weekly
        - monthly
        - annually
      type: string
    BulkCreateInviteRequest:
      type: object
      properties:
        sent_to_email:
          type: string
          format: email
        is_claimed:
          type: boolean
        expires_at:
          type: string
          format: date-time
        role:
          $ref: '#/components/schemas/RoleEnum'
        team_id:
          type: string
          format: uuid
        to_emails:
          type: array
          items:
            type: string
            format: email
      required:
        - team_id
        - to_emails
    ClientSecret:
      type: object
      properties:
        client_secret:
          type: string
      required:
        - client_secret
    CreateCustomer:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        identity:
          $ref: '#/components/schemas/Identity'
        source_id:
          type: string
        teams:
          type: array
          items:
            $ref: '#/components/schemas/TeamViaMembership'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
        - created_at
        - id
        - identity
        - teams
        - updated_at
    CreateCustomerRequest:
      type: object
      properties:
        identity:
          $ref: '#/components/schemas/IdentityRequest'
        source_id:
          type: string
      required:
        - identity
    CreateMembershipRequest:
      type: object
      description: |-
        Add a new membership to a Team. Role defaults to `member` if not specified.
        Specify `email` and/or `source_id` to lookup the customer, create it if it
        doesn't exist, and add it to the team.
      properties:
        role:
          allOf:
            - $ref: '#/components/schemas/RoleEnum'
          default: member
        team_id:
          type: string
          format: uuid
        customer_id:
          type: string
          format: uuid
        email:
          type: string
          format: email
        source_id:
          type: string
      required:
        - team_id
    Customer:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        email:
          type: string
          readOnly: true
        source_id:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        has_saved_payment_method:
          type: boolean
          readOnly: true
      required:
        - created_at
        - email
        - has_saved_payment_method
        - id
        - updated_at
    CustomerConfirmCardRequest:
      type: object
      properties:
        stripe_setup_id:
          type: string
        payment_method_id:
          type: string
      required:
        - payment_method_id
        - stripe_setup_id
    CustomerIntentRequest:
      type: object
      properties:
        plan_id:
          type: string
          format: uuid
        team_id:
          type: string
          format: uuid
      required:
        - plan_id
        - team_id
    CustomerRequest:
      type: object
      properties:
        source_id:
          type: string
    CustomerTokenResponse:
      type: object
      properties:
        token:
          type: string
        is_new:
          type: boolean
      required:
        - is_new
        - token
    Error:
      type: object
      properties:
        detail:
          $ref: '#/components/schemas/InnerError'
        message:
          type: string
      required:
        - detail
        - message
    Feature:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        provider_id:
          type: string
          format: uuid
        slug:
          type: string
          nullable: true
          pattern: ^[-a-zA-Z0-9_]+$
        display:
          type: string
          nullable: true
          maxLength: 128
        tooltip:
          type: string
          nullable: true
          maxLength: 512
        is_builtin:
          type: boolean
          readOnly: true
      required:
        - id
        - is_builtin
    FeatureRequest:
      type: object
      properties:
        provider_id:
          type: string
          format: uuid
        slug:
          type: string
          nullable: true
          pattern: ^[-a-zA-Z0-9_]+$
        display:
          type: string
          nullable: true
          maxLength: 128
        tooltip:
          type: string
          nullable: true
          maxLength: 512
    FeatureSpec:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 128
        record_period:
          allOf:
            - $ref: '#/components/schemas/RecordPeriodEnum'
          default: monthly
        aggregation:
          allOf:
            - $ref: '#/components/schemas/AggregationEnum'
          default: sum
        max_limit:
          type: integer
          maximum: 2147483647
          minimum: 0
        unit_price:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Amount in cents
        units_included:
          type: integer
          nullable: true
          default: 0
        provider_id:
          type: string
          format: uuid
      required:
        - id
        - name
    FeatureSpecRequest:
      type: object
      properties:
        name:
          type: string
          maxLength: 128
        record_period:
          allOf:
            - $ref: '#/components/schemas/RecordPeriodEnum'
          default: monthly
        aggregation:
          allOf:
            - $ref: '#/components/schemas/AggregationEnum'
          default: sum
        max_limit:
          type: integer
          maximum: 2147483647
          minimum: 0
        unit_price:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Amount in cents
        units_included:
          type: integer
          nullable: true
          default: 0
        provider_id:
          type: string
          format: uuid
      required:
        - name
    IDTokenExchangeRequest:
      type: object
      properties:
        id_token:
          type: string
      required:
        - id_token
    Identity:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
        - email
    IdentityRequest:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
        - email
    InnerError:
      type: object
      properties:
        non_field_errors:
          type: array
          items:
            type: object
            additionalProperties: {}
        field_errors:
          type: array
          items:
            type: object
            additionalProperties: {}
      required:
        - field_errors
        - non_field_errors
    Invite:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        sent_by:
          allOf:
            - $ref: '#/components/schemas/PublicProfile'
          readOnly: true
        sent_to_email:
          type: string
          maxLength: 128
        is_claimed:
          type: boolean
        expires_at:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
          readOnly: true
        role:
          $ref: '#/components/schemas/RoleEnum'
        team_id:
          type: string
          format: uuid
      required:
        - created_at
        - id
        - sent_by
        - sent_to_email
        - team_id
    InviteRequest:
      type: object
      properties:
        sent_to_email:
          type: string
          maxLength: 128
        is_claimed:
          type: boolean
        expires_at:
          type: string
          format: date-time
        role:
          $ref: '#/components/schemas/RoleEnum'
        team_id:
          type: string
          format: uuid
      required:
        - sent_to_email
        - team_id
    Invoice:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        billing_period:
          $ref: '#/components/schemas/BillingPeriodEnum'
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        team_id:
          type: string
          format: uuid
          readOnly: true
        plan_name:
          type: string
        subscription_id:
          type: string
          format: uuid
          nullable: true
          readOnly: true
        state:
          $ref: '#/components/schemas/StateEnum'
        stripe_payment_id:
          type: string
          nullable: true
          maxLength: 128
        total:
          type: number
          readOnly: true
      required:
        - created_at
        - id
        - state
        - subscription_id
        - team_id
        - total
        - updated_at
    IssueCustomerTokenRequest:
      type: object
      properties:
        customer_id:
          type: string
          format: uuid
        customer_email:
          type: string
          format: email
        customer_source_id:
          type: string
    Membership:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        team_id:
          type: string
          format: uuid
          readOnly: true
        customer_id:
          type: string
          format: uuid
          readOnly: true
        role:
          $ref: '#/components/schemas/RoleEnum'
        email:
          type: string
          readOnly: true
      required:
        - customer_id
        - email
        - id
        - role
        - team_id
    MembershipRequest:
      type: object
      properties:
        role:
          $ref: '#/components/schemas/RoleEnum'
      required:
        - role
    OpEnum:
      enum:
        - inc
        - dec
        - set
        - reset
      type: string
    PaginatedCustomerList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Customer'
    PaginatedFeatureList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Feature'
    PaginatedFeatureSpecList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/FeatureSpec'
    PaginatedInviteList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Invite'
    PaginatedInvoiceList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Invoice'
    PaginatedMembershipList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Membership'
    PaginatedPlanList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Plan'
    PaginatedProviderList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Provider'
    PaginatedSubscriptionList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Subscription'
    PaginatedTeamList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Team'
    PaginatedTokenList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Token'
    PatchedCustomerRequest:
      type: object
      properties:
        source_id:
          type: string
    PatchedFeatureRequest:
      type: object
      properties:
        provider_id:
          type: string
          format: uuid
        slug:
          type: string
          nullable: true
          pattern: ^[-a-zA-Z0-9_]+$
        display:
          type: string
          nullable: true
          maxLength: 128
        tooltip:
          type: string
          nullable: true
          maxLength: 512
    PatchedFeatureSpecRequest:
      type: object
      properties:
        name:
          type: string
          maxLength: 128
        record_period:
          allOf:
            - $ref: '#/components/schemas/RecordPeriodEnum'
          default: monthly
        aggregation:
          allOf:
            - $ref: '#/components/schemas/AggregationEnum'
          default: sum
        max_limit:
          type: integer
          maximum: 2147483647
          minimum: 0
        unit_price:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Amount in cents
        units_included:
          type: integer
          nullable: true
          default: 0
        provider_id:
          type: string
          format: uuid
    PatchedInviteRequest:
      type: object
      properties:
        sent_to_email:
          type: string
          maxLength: 128
        is_claimed:
          type: boolean
        expires_at:
          type: string
          format: date-time
        role:
          $ref: '#/components/schemas/RoleEnum'
        team_id:
          type: string
          format: uuid
    PatchedMembershipRequest:
      type: object
      properties:
        role:
          $ref: '#/components/schemas/RoleEnum'
    PatchedPlanRequest:
      type: object
      properties:
        provider_id:
          type: string
          format: uuid
        name:
          type: string
          maxLength: 32
        tier:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        is_active:
          type: boolean
        is_public:
          type: boolean
        is_trial_allowed:
          type: boolean
        is_self_serve:
          type: boolean
        redirect_url:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        cta_text:
          type: string
          nullable: true
          maxLength: 128
        replace_plan_id:
          type: string
          format: uuid
          nullable: true
        per_year_price_cents:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Amount in cents
        per_month_price_cents:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Amount in cents
        features:
          type: array
          items:
            $ref: '#/components/schemas/PlanFeatureRequest'
        teams_access:
          type: array
          items:
            $ref: '#/components/schemas/TeamAccessRequest'
    PatchedPlanSwitchRequest:
      type: object
      properties:
        plan_id:
          type: string
          format: uuid
        payment_state:
          $ref: '#/components/schemas/PaymentStateEnum'
    PatchedProviderRequest:
      type: object
      properties:
        name:
          type: string
          maxLength: 64
        slug:
          type: string
          pattern: ^[a-z]+[0-9]*(?:-[a-z0-9]+)*$
        auth_url:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        home_url:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        webhook_url:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        invoice_logo_url:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        default_plan_id:
          type: string
          format: uuid
          writeOnly: true
          nullable: true
        trial_days:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        is_card_required:
          type: boolean
        support_email:
          type: string
          format: email
          nullable: true
          maxLength: 254
    PatchedSubscriptionRequest:
      type: object
      properties:
        plan_id:
          type: string
          format: uuid
        team_id:
          type: string
          format: uuid
        is_paused:
          type: boolean
        next_plan_id:
          type: string
          format: uuid
        cancel_on:
          type: string
          format: date-time
          nullable: true
    PatchedTeamDetailRequest:
      type: object
      properties:
        provider_id:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
          maxLength: 128
        is_free_trial_used:
          type: boolean
    PatchedTokenRequest:
      type: object
      properties:
        provider_id:
          type: string
          format: uuid
        is_active:
          type: boolean
        is_public:
          type: boolean
    PaymentStateEnum:
      enum:
        - complete
        - incomplete
      type: string
    Plan:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        provider_id:
          type: string
          format: uuid
        name:
          type: string
          maxLength: 32
        tier:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        is_active:
          type: boolean
        is_public:
          type: boolean
        is_trial_allowed:
          type: boolean
        is_default:
          type: boolean
          readOnly: true
        is_self_serve:
          type: boolean
        redirect_url:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        cta_text:
          type: string
          nullable: true
          maxLength: 128
        replace_plan_id:
          type: string
          format: uuid
          nullable: true
        per_year_price_cents:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Amount in cents
        per_month_price_cents:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Amount in cents
        features:
          type: array
          items:
            $ref: '#/components/schemas/PlanFeature'
        teams_access:
          type: array
          items:
            $ref: '#/components/schemas/TeamAccess'
      required:
        - features
        - id
        - is_active
        - is_default
        - is_public
        - is_trial_allowed
        - name
        - replace_plan_id
        - teams_access
    PlanContactFormRequest:
      type: object
      properties:
        email:
          type: string
          format: email
        company_name:
          type: string
    PlanFeature:
      type: object
      properties:
        id:
          type: string
          format: uuid
        is_active:
          type: boolean
        display:
          type: string
          nullable: true
        sort:
          type: integer
          default: 0
        feature:
          allOf:
            - $ref: '#/components/schemas/Feature'
          readOnly: true
        spec:
          allOf:
            - $ref: '#/components/schemas/FeatureSpec'
          readOnly: true
      required:
        - feature
        - spec
    PlanFeatureRequest:
      type: object
      properties:
        id:
          type: string
          format: uuid
        feature_id:
          type: string
          format: uuid
          writeOnly: true
        spec_id:
          type: string
          format: uuid
          writeOnly: true
          nullable: true
        is_active:
          type: boolean
        display:
          type: string
          nullable: true
        sort:
          type: integer
          default: 0
    PlanRequest:
      type: object
      properties:
        provider_id:
          type: string
          format: uuid
        name:
          type: string
          maxLength: 32
        tier:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        is_active:
          type: boolean
        is_public:
          type: boolean
        is_trial_allowed:
          type: boolean
        is_self_serve:
          type: boolean
        redirect_url:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        cta_text:
          type: string
          nullable: true
          maxLength: 128
        replace_plan_id:
          type: string
          format: uuid
          nullable: true
        per_year_price_cents:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Amount in cents
        per_month_price_cents:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Amount in cents
        features:
          type: array
          items:
            $ref: '#/components/schemas/PlanFeatureRequest'
        teams_access:
          type: array
          items:
            $ref: '#/components/schemas/TeamAccessRequest'
      required:
        - features
        - is_active
        - is_public
        - is_trial_allowed
        - name
        - replace_plan_id
        - teams_access
    Provider:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 64
        slug:
          type: string
          pattern: ^[a-z]+[0-9]*(?:-[a-z0-9]+)*$
        auth_url:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        home_url:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        webhook_url:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        invoice_logo_url:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        default_plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
          readOnly: true
          nullable: true
        trial_days:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        is_card_required:
          type: boolean
        owner_id:
          type: string
          format: uuid
          readOnly: true
        stripe_account_id:
          type: string
          readOnly: true
        shadow_id:
          type: string
          format: uuid
          readOnly: true
          nullable: true
        parent_id:
          type: string
          format: uuid
          readOnly: true
          nullable: true
        is_shadow:
          type: boolean
          readOnly: true
        support_email:
          type: string
          format: email
          nullable: true
          maxLength: 254
      required:
        - default_plan
        - id
        - is_shadow
        - name
        - owner_id
        - parent_id
        - shadow_id
        - slug
        - stripe_account_id
    ProviderRequest:
      type: object
      properties:
        name:
          type: string
          maxLength: 64
        slug:
          type: string
          pattern: ^[a-z]+[0-9]*(?:-[a-z0-9]+)*$
        auth_url:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        home_url:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        webhook_url:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        invoice_logo_url:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        default_plan_id:
          type: string
          format: uuid
          writeOnly: true
          nullable: true
        trial_days:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        is_card_required:
          type: boolean
        support_email:
          type: string
          format: email
          nullable: true
          maxLength: 254
      required:
        - name
        - slug
    PublicProfile:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        email:
          type: string
          format: email
          readOnly: true
      required:
        - email
        - id
    RecordPeriodEnum:
      enum:
        - hourly
        - daily
        - weekly
        - monthly
        - annually
      type: string
    ReportUsageRequest:
      type: object
      properties:
        slug:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        op:
          $ref: '#/components/schemas/OpEnum'
        value:
          type: integer
          default: 1
      required:
        - op
        - slug
    RoleEnum:
      enum:
        - owner
        - member
      type: string
    Slug:
      type: object
      properties:
        slug:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
      required:
        - slug
    StateEnum:
      enum:
        - draft
        - open
        - paid
        - canceled
        - void
      type: string
    Subscription:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        plan_id:
          type: string
          format: uuid
        team_id:
          type: string
          format: uuid
        start_at:
          type: string
          format: date-time
          readOnly: true
        end_at:
          type: string
          format: date-time
          readOnly: true
        is_paused:
          type: boolean
        is_active:
          type: boolean
          readOnly: true
        next_plan_id:
          type: string
          format: uuid
        cancel_on:
          type: string
          format: date-time
          nullable: true
      required:
        - end_at
        - id
        - is_active
        - plan_id
        - start_at
        - team_id
    SubscriptionDetail:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
          readOnly: true
        plan_id:
          type: string
          format: uuid
          readOnly: true
        start_at:
          type: string
          format: date-time
          readOnly: true
        end_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        is_paused:
          type: boolean
          readOnly: true
        cancel_on:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        is_active:
          type: boolean
          readOnly: true
        days_left:
          type: integer
          readOnly: true
        billing_period:
          type: string
          readOnly: true
        next_plan_id:
          type: string
          format: uuid
          readOnly: true
        next_plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
          readOnly: true
        is_free_trial_eligible:
          type: boolean
          readOnly: true
        usages:
          type: array
          items:
            $ref: '#/components/schemas/Usage'
          readOnly: true
      required:
        - billing_period
        - cancel_on
        - days_left
        - end_at
        - id
        - is_active
        - is_free_trial_eligible
        - is_paused
        - next_plan
        - next_plan_id
        - plan
        - plan_id
        - start_at
        - usages
    SubscriptionRequest:
      type: object
      properties:
        plan_id:
          type: string
          format: uuid
        team_id:
          type: string
          format: uuid
        is_paused:
          type: boolean
        next_plan_id:
          type: string
          format: uuid
        cancel_on:
          type: string
          format: date-time
          nullable: true
      required:
        - plan_id
        - team_id
    Team:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          nullable: true
          maxLength: 128
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        metadata:
          type: array
          items:
            $ref: '#/components/schemas/TeamMetadata'
          readOnly: true
      required:
        - created_at
        - id
        - metadata
        - updated_at
    TeamAccess:
      type: object
      properties:
        id:
          type: string
          format: uuid
        team_id:
          type: string
          format: uuid
        name:
          type: string
      required:
        - team_id
    TeamAccessRequest:
      type: object
      properties:
        id:
          type: string
          format: uuid
        team_id:
          type: string
          format: uuid
        name:
          type: string
        revoke:
          type: boolean
          writeOnly: true
          default: false
      required:
        - team_id
    TeamDetail:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        provider_id:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
          maxLength: 128
        members:
          type: array
          items:
            $ref: '#/components/schemas/Membership'
          readOnly: true
        invites:
          type: array
          items:
            $ref: '#/components/schemas/Invite'
          readOnly: true
        subscription:
          allOf:
            - $ref: '#/components/schemas/SubscriptionDetail'
          readOnly: true
          nullable: true
        available_plans:
          type: array
          items:
            $ref: '#/components/schemas/Plan'
          readOnly: true
        is_free_trial_used:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        metadata:
          type: array
          items:
            $ref: '#/components/schemas/TeamMetadata'
          readOnly: true
        total_credits:
          type: integer
          readOnly: true
      required:
        - available_plans
        - created_at
        - id
        - invites
        - members
        - metadata
        - name
        - subscription
        - total_credits
        - updated_at
    TeamDetailRequest:
      type: object
      properties:
        provider_id:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
          maxLength: 128
        is_free_trial_used:
          type: boolean
      required:
        - name
    TeamMetadata:
      type: object
      properties:
        key:
          type: string
          maxLength: 128
        value:
          type: string
          maxLength: 512
      required:
        - key
        - value
    TeamMetadataRequest:
      type: object
      properties:
        key:
          type: string
          maxLength: 128
        value:
          type: string
          maxLength: 512
      required:
        - key
        - value
    TeamViaMembership:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          readOnly: true
      required:
        - id
        - name
    Token:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        provider_id:
          type: string
          format: uuid
        token:
          type: string
          readOnly: true
        is_active:
          type: boolean
        is_public:
          type: boolean
        last_used_at:
          type: string
          format: date-time
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
        - created_at
        - id
        - last_used_at
        - token
    TokenRequest:
      type: object
      properties:
        provider_id:
          type: string
          format: uuid
        is_active:
          type: boolean
        is_public:
          type: boolean
    Usage:
      type: object
      properties:
        slug:
          type: string
          readOnly: true
          pattern: ^[-a-zA-Z0-9_]+$
        value:
          type: integer
          readOnly: true
        limit:
          type: integer
          readOnly: true
        per_unit:
          type: integer
          readOnly: true
      required:
        - limit
        - per_unit
        - slug
        - value
    UsageExceeded:
      type: object
      properties:
        exceeded:
          type: boolean
      required:
        - exceeded
  securitySchemes:
    jwt-token:
      type: http
      scheme: bearer
    oauth2-deprecated:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://ironplans.us.auth0.com/authorize?audience=https://api.ironplans.com/
          tokenUrl: https://ironplans.us.auth0.com/oauth/token
          scopes:
            openid: OIDC
            profile: Profile
            email: Email
    private-provider-token:
      type: http
      scheme: bearer
