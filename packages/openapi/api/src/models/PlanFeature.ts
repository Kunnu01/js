/* tslint:disable */
/* eslint-disable */
/**
 * Iron Plans API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime'
import {
  Feature,
  FeatureFromJSON,
  FeatureFromJSONTyped,
  FeatureToJSON,
  FeatureSpec,
  FeatureSpecFromJSON,
  FeatureSpecFromJSONTyped,
  FeatureSpecToJSON,
} from './'

/**
 *
 * @export
 * @interface PlanFeature
 */
export interface PlanFeature {
  /**
   *
   * @type {string}
   * @memberof PlanFeature
   */
  id?: string
  /**
   *
   * @type {boolean}
   * @memberof PlanFeature
   */
  isActive?: boolean
  /**
   *
   * @type {string}
   * @memberof PlanFeature
   */
  display?: string | null
  /**
   *
   * @type {number}
   * @memberof PlanFeature
   */
  sort?: number
  /**
   *
   * @type {Feature}
   * @memberof PlanFeature
   */
  readonly feature: Feature
  /**
   *
   * @type {FeatureSpec}
   * @memberof PlanFeature
   */
  readonly spec: FeatureSpec
}

export function PlanFeatureFromJSON(json: any): PlanFeature {
  return PlanFeatureFromJSONTyped(json, false)
}

export function PlanFeatureFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): PlanFeature {
  if (json === undefined || json === null) {
    return json
  }
  return {
    id: !exists(json, 'id') ? undefined : json['id'],
    isActive: !exists(json, 'is_active') ? undefined : json['is_active'],
    display: !exists(json, 'display') ? undefined : json['display'],
    sort: !exists(json, 'sort') ? undefined : json['sort'],
    feature: FeatureFromJSON(json['feature']),
    spec: FeatureSpecFromJSON(json['spec']),
  }
}

export function PlanFeatureToJSON(value?: PlanFeature | null): any {
  if (value === undefined) {
    return undefined
  }
  if (value === null) {
    return null
  }
  return {
    id: value.id,
    is_active: value.isActive,
    display: value.display,
    sort: value.sort,
  }
}
